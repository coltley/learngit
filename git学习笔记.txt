*把文件添加到版本库：
git add 文件名
		//用命令告诉git把文件添加到仓库
		
git commit -m "本次提交的说明"
		//这样就能从历史记录里方便地找到改动记录
		
git add file.txt
git add file2.txt file3.txt
git commit -m "add 3 files"
		//commit可以一次提交很多文件
		

*两条git的小命令：
git status
		//随时掌握工作区的状态
		
git diff
		//查看文件被修改是内容
		
修改文件之后仍需要运行git add file 和git commit命令

*时光穿梭机：
git log
		//显示曾经修改过的历史记录
	参数--pretty=oneline可以将每一条记录简化成一行显示出来
	
git reset --hard head^
		//回退到上一个版本
	--hard head^^回退到上上个版本
	--hard head~N往上回退N个版本
	--hard 版本号的前几位 回退到版本号的那个版本
	
git reflog
		//记录执行的每一次命令
		
		
*工作区和暂存区
工作区就是电脑中我们能看到的文件夹，即learngit文件夹
版本库就是工作区里有一个隐藏的目录.git，是git的版本库
git版本库里存储了许多东西，其中最重要的就是stage(index)的暂存区
还有Git为我们自动创建的第一个分支master，以及指向master的一个指针叫HEAD
把文件往Git版本库里添加的时候，是分两步执行的：
第一步是用git add把文件添加进去，实际上就是把文件修改添加到暂存区
第二步是用git commit提交更改，实际上就是把暂存区的所有内容提交到当前分支
可以简单的理解为需要提交的文件修改通通放到暂存区，然后，一次性提交暂存区的所有修改


*撤销修改
git checkout -- file
		//当你改乱了工作区某个文件的内容，想直接丢弃工作区的修改时
		  也就是没git add file的时候
git reset HEAD file
		//当你不但改乱了工作区某个文件的内容，还添加到了暂存区时，可以使文件退回到工作区里
		  也就是没git commit的时候
已经提交了不合适的修改到版本库时，想要撤销本次提交，使用git rsset,不过前提是没有推送到远程库


*删除文件
rm 文件名
		//删除资源管理器中的文件
git rm 文件名
git commit
		//从版本库中删除文件
git  checkout -- 文件名
		//用版本库里的版本替换工作区的版本，即恢复文件到资源管理器

	